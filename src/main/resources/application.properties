spring.application.name=nordic-weather
### weather api
weather.api.key=${WEATHER_API_KEY:your_weather_api_key2}
weather.api.url=${WEATHER_API_URL:https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/}
### frontend
web.config.frontend-url=${FRONTEND_URL:https://nordic-weather-app.vercel.app}
### redis
spring.data.redis.client-type=jedis
spring.data.redis.host=${CACHE_SERVER_HOST:localhost}
spring.data.redis.port=${CACHE_SERVER_PORT:6379}
spring.data.redis.password=
spring.data.redis.timeout=2000
redis.expiration.timeout.minutes=${CACHE_EXPIRATION_TIMEOUT_MINUTES:1}
### rate-limiting
rate.limiting.capacity=${RATE_LIMITING_CAPACITY:30}
rate.limiting.token=${RATE_LIMITING_TOKEN:30}
rate.limiting.period-minutes=${RATE_LIMITING_PERIOD_MINUTES:1}
### db
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/nordic_weather}
spring.datasource.username=${DB_USERNAME:admin}
spring.datasource.password=${DB_PASSWORD:madmin}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
### hikari for db connection pooling
spring.datasource.hikari.pool-name=${spring.application.name}
spring.jpa.hibernate.ddl-auto=update
### jwt
jwt.secret="myVeeeeeeeeeeeeeeeeeeeeeeerySecretSecret"
### grpc
spring.grpc.server.port=9090
spring.grpc.server.reflection.enabled=true